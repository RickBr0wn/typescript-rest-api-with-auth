// {
//   _mongooseOptions: {},
//   _transforms: [],
//   _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },
//   _executionStack: null,
//   mongooseCollection: Collection {
//     collection: Collection { s: [Object] },
//     Promise: [Function: Promise],
//     modelName: 'User',
//     _closed: false,
//     opts: {
//       autoIndex: true,
//       autoCreate: true,
//       schemaUserProvidedOptions: [Object],
//       capped: false,
//       Promise: [Function: Promise],
//       '$wasForceClosed': undefined
//     },
//     name: 'users',
//     collectionName: 'users',
//     conn: NativeConnection {
//       base: [Mongoose],
//       collections: [Object],
//       models: [Object],
//       config: [Object],
//       replica: false,
//       options: null,
//       otherDbs: [],
//       relatedDbs: {},
//       states: [Object: null prototype],
//       _readyState: 1,
//       _closeCalled: undefined,
//       _hasOpened: true,
//       plugins: [],
//       id: 0,
//       _queue: [],
//       _listening: false,
//       _connectionString: 'mongodb://127.0.0.1:27017/typescript-sandbox',
//       _connectionOptions: [Object],
//       client: [MongoClient],
//       '$initialConnection': [Promise],
//       db: [Db],
//       host: '127.0.0.1',
//       port: 27017,
//       name: 'typescript-sandbox'
//     },
//     queue: [],
//     buffer: false,
//     emitter: EventEmitter {
//       _events: [Object: null prototype] {},
//       _eventsCount: 0,
//       _maxListeners: undefined,
//       [Symbol(kCapture)]: false
//     }
//   },
//   model: Model { User },
//   schema: Schema {
//     obj: { email: [Object], password: [Object], token: [Object] },
//     paths: {
//       email: [SchemaString],
//       password: [SchemaString],
//       token: [SchemaString],
//       _id: [ObjectId],
//       updatedAt: [SchemaDate],
//       createdAt: [SchemaDate],
//       __v: [SchemaNumber]
//     },
//     aliases: {},
//     subpaths: {},
//     virtuals: { id: [VirtualType] },
//     singleNestedPaths: {},
//     nested: {},
//     inherits: {},
//     callQueue: [],
//     _indexes: [],
//     methods: { encryptPassword: [Function: encryptPassword] },
//     methodOptions: {},
//     statics: {},
//     tree: {
//       email: [Object],
//       password: [Object],
//       token: [Object],
//       _id: [Object],
//       updatedAt: [Function: Date],
//       createdAt: [Object],
//       __v: [Function: Number],
//       id: [VirtualType]
//     },
//     query: {},
//     childSchemas: [],
//     plugins: [ [Object], [Object], [Object], [Object], [Object] ],
//     '$id': 1,
//     mapPaths: [],
//     s: { hooks: [Kareem] },
//     _userProvidedOptions: { timestamps: true },
//     options: {
//       timestamps: true,
//       typeKey: 'type',
//       id: true,
//       _id: true,
//       validateBeforeSave: true,
//       read: null,
//       shardKey: null,
//       discriminatorKey: '__t',
//       autoIndex: null,
//       minimize: true,
//       optimisticConcurrency: false,
//       versionKey: '__v',
//       capped: false,
//       bufferCommands: true,
//       strictQuery: true,
//       strict: true,
//       pluralization: true
//     },
//     '$timestamps': { createdAt: 'createdAt', updatedAt: 'updatedAt' },
//     '$globalPluginsApplied': true
//   },
//   op: 'findOne',
//   options: {},
//   _conditions: {
//     token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNjY0BjY2MuY29tIiwiaWF0IjoxNjUzMzA5NDg3LCJleHAiOjE2NTMzOTU4ODd9.u2olzBmPvVHNnRkenvsM2VXtkrX7hS_YJbeCx9-50qM'
//   },
//   _fields: undefined,
//   _update: undefined,
//   _path: undefined,
//   _distinct: undefined,
//   _collection: NodeCollection {
//     collection: Collection {
//       collection: [Collection],
//       Promise: [Function: Promise],
//       modelName: 'User',
//       _closed: false,
//       opts: [Object],
//       name: 'users',
//       collectionName: 'users',
//       conn: [NativeConnection],
//       queue: [],
//       buffer: false,
//       emitter: [EventEmitter]
//     },
//     collectionName: 'users'
//   },
//   _traceFunction: undefined,
//   '$useProjection': true
//  }
